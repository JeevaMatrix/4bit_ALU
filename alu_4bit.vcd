$date
	Thu Jul 24 20:11:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_4bit_tb $end
$var wire 1 ! zero_i $end
$var wire 1 " zero $end
$var wire 1 # overflow_i $end
$var wire 1 $ overflow $end
$var wire 1 % negative_i $end
$var wire 1 & negative $end
$var wire 1 ' carry_i $end
$var wire 1 ( carry $end
$var wire 4 ) ALU_out [3:0] $end
$var reg 4 * a [3:0] $end
$var reg 4 + b [3:0] $end
$var reg 1 , clk $end
$var reg 1 - enable $end
$var reg 4 . opcode [3:0] $end
$var reg 1 / reset $end
$var reg 1 0 update $end
$scope module DUT $end
$var wire 4 1 a [3:0] $end
$var wire 4 2 b [3:0] $end
$var wire 1 - enable $end
$var wire 4 3 opcode [3:0] $end
$var parameter 4 4 ADD $end
$var parameter 4 5 AND $end
$var parameter 4 6 DECA $end
$var parameter 4 7 INCA $end
$var parameter 4 8 NOT $end
$var parameter 4 9 OR $end
$var parameter 4 : SLL $end
$var parameter 4 ; SRA $end
$var parameter 4 < SRL $end
$var parameter 4 = SUB $end
$var parameter 4 > XOR $end
$var reg 4 ? ALU_out [3:0] $end
$var reg 1 ' carry $end
$var reg 1 % negative $end
$var reg 1 # overflow $end
$var reg 5 @ temp [4:0] $end
$var reg 1 ! zero $end
$upscope $end
$scope module FR_inst $end
$var wire 1 ' carry_in $end
$var wire 1 , clk $end
$var wire 1 % negative_in $end
$var wire 1 # overflow_in $end
$var wire 1 / reset $end
$var wire 1 0 update $end
$var wire 1 ! zero_in $end
$var reg 1 ( carry $end
$var reg 1 & negative $end
$var reg 1 $ overflow $end
$var reg 1 " zero $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 >
b1 =
b1001 <
b1010 ;
b1000 :
b101 9
b111 8
b10 7
b11 6
b100 5
b0 4
$end
#0
$dumpvars
b0 @
b0 ?
bx 3
bx 2
bx 1
00
1/
bx .
0-
0,
bx +
bx *
b0 )
0(
0'
0&
0%
0$
x#
0"
1!
$end
#5
1,
#10
0#
b111 )
b111 ?
b111 @
0!
0,
10
1-
b0 .
b0 3
b100 +
b100 2
b11 *
b11 1
0/
#15
1,
#20
1'
b10 )
b10 ?
b10 @
0,
b1 .
b1 3
b11 +
b11 2
b101 *
b101 1
10
#25
1(
1,
#30
1%
0'
b1000 )
b1000 ?
b0 @
0,
b100 .
b100 3
b1010 +
b1010 2
b1100 *
b1100 1
10
#35
0(
1&
1,
#40
1%
b1110 )
b1110 ?
0,
b101 .
b101 3
10
#45
1,
#50
1'
0%
b10 )
b10 ?
0,
b1000 .
b1000 3
b0 +
b0 2
b1001 *
b1001 1
10
#55
1(
0&
1,
#60
1'
b100 )
b100 ?
0,
b1001 .
b1001 3
10
#65
1,
#70
1%
1'
b1100 )
b1100 ?
0,
b1010 .
b1010 3
10
#75
1&
1,
#80
0,
00
